loaded model = load model lol

openmeteodata = ask open meteo API for data
DATE = date from openmeteodata[first row's date]

# API PART
loop for all the days we want to predict - next 365 days:
    
    try to mach current date to openmeteodata's date:
            drop the date part of the API
            beginning of list .append(API's data)
    except if no response or (too far or none (so no data)):
            then avg last 5y of temp, perc, rain and beginning of list .append(avgofrain, avgofperc, avgoftemp)
        
# HOLIDAY PART
    try match current DATE to holidays df:
        put the year, month,day,weekday at the end then drop the date from the first column
        end of list.append(the matched row + year,month,day,weekday) "this will be a huge one, everything except the date"
    except no match:
        print("please update the holidays file, can't see {DATE in the holidays file}")
        stop the loop break()
    
    "tickets part"
    variable = (number of ticket columns - 1) * "0"
    variable += "1"  "0000000000000001"
    for loop throught the number of ticket columns:
        for i in variable:
            tickets part list.append(int(i))

        full line = beginning of list + tickets part list + end of list
        prediction = loaded model (full line)

        if prediction_todaysDATE.csv doesnt exist: "this part is for logging and statistics"
            create it
        else:
            open prediction_todasysDATE.csv file and write the prediction into it
        
        we shift the variable by 1 position
    

    DATE move to next day

save the CSV file

"this file should be ran once a day at 2am or w.e when it has the time to update or run"